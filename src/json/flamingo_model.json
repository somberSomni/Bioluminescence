
            //build feathers using for loops
            let feathers = {
                name : "feathers",
                position: "0 0 150",
                children : [],
            }
    const bender = {
                "name" : "bender",
                "type" : "cylinder",
                "size" : [ 5, 70, 0 ],
                "position" : [ 0, 0, 0 ],
                "relativeTo" : "knee",
                "placement" : "top"
                
            }
            const benderTwo = {
                "name" : "bender2",
                "type" : "cylinder",
                "size" : [ 5, 100, 0 ],
                "position" : [ 0, -35 - 50, 0 ],
                "relativeTo" : "knee",
                "placement" : "top"
                
            }
            const knee = {
                "name" : "knee",
                "type" : "dodecahedron",
                "position" : [ 0, -35, 0 ],
                "size" : 10
            }
            
                const feather = {
                    "type": "circle",
                    "name" : "feather",
                    "color" : "blue",
                    "count" : 15,
                    "layout": "curve",
                    "layoutLimit" : [ 5, 10, 300 ],
                    "margin" : [ -160, 0, 300],
                    "size" : 100,
                    "fold" : [ 45, 20, 0 ],
                    "foldRadius" : [ 30, 0, 0 ],
                    "foldPower" : [ 1, 1, 1 ]
                }
            
            feathers.children.push( feather );
            const foot = {
                "name" : "foot",
                position: [ 0, -150, 0 ],
                "children" : [
                    {
                        "name" : "ankle",
                        "type" : "cylinder",
                        "size" : [ 5, 18, 10 ]
                    }
                ]
            }
            
            const legOffset = 10;
            const legSpace = bodySize / 2.5;
            const leg = {
                "name" : "leg",
                "position" : [ legOffset, legSpace, legSpace ],
                "children" : [
                    bender, 
                    knee, 
                    benderTwo, 
                    foot
                ]
            }
            
            const legTwo = {
                "name" : "leg2",
                "position" : [ legOffset, 0, -1 * legSpace ],
                "children" : [
                    bender, 
                    knee, 
                    benderTwo, 
                    foot
                ]
            }
            
            const neck = {
                "name" : "neck",
                "type" : "tube",
                "side" : "front",
                "size" : 40,
                "bottom" : 20,
                "top" : 50,
                "scale" : 1,
                "position" : "0 0 0",
                "segments" : 10,
                "typeHandler" : ( t ) => {
                    //t gives a number from 0 to 1 to distribute points
                    let yVal, xVal;
                    const radius = 15;
                    if ( t < 0.25 ) {
                        yVal = - 10 * Math.sin( t * 4 * Math.PI );
                        xVal = ( Math.sin( t * Math.PI * 2 ) * ( radius * 2 ) ) - radius;
                    }  else {
                        yVal = 100 * ( t - 0.25 );
                        xVal = Math.sin( t * Math.PI * 2 ) * radius;
                    }
                    return { x: xVal, y :  yVal, z: 0 };
                },
                "rotation" : [ 0, 180, 0 ]
            }
            
            const head = {
                "name" : "head",
                "type" : "sphere",
                "size" : 20,
                "position" : [ 0, 75, 0 ],
                "relativeTo" : "neck",
                
            }
            
            const noggin = {
                "name" : "noggin",
                "children" : [
                    head,
                    neck
                ]
            }
            
             const body = {
                name : "body",
                color: "pink",
                position: [ 50, 0, 0 ],
                children  : [
                    {
                       name : "chest",
                       type : "sphere",
                       size : bodySize
                    },
                    {
                        name : "butt",
                        type : "cylinder",
                        size: [ bodySize - offset, bodyWidth, 0 ],
                        rotation : [ 0, 0, 90 ],
                        position: [ bodyWidth / 2, 0, 0 ],
                        bottom: 25
                    },
                    leg,
                    legTwo
                ]
            }
            const flamingo = {
                "name" : "flamingo",
                "material" : "toon",
                "color" : "blue",
                "side" : "front",
                "openEnded" : "true",
                "children" : [
                    body,
                    noggin,
                ]
                        
            };
            
            